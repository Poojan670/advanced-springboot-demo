version: '3.0'

services:
  postgres:
    image: 'postgres:13.1-alpine'
    networks:
      - app
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    container_name: postgres
    environment:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      PGDATA: /var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: 'admin@admin.com'
      PGADMIN_DEFAULT_PASSWORD: 'poojan12'
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - app
    restart: unless-stopped

  spring:
    image: 'advanced-spring-boot-demo:latest'
    networks:
      - app
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "8090:8080"
    restart: unless-stopped
    container_name: spring
    depends_on:
      - postgres

volumes:
  dbdata:
  pgadmin:

networks:
  app:
    driver: bridge